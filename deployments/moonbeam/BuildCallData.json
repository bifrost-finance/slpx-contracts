{
  "address": "0xaDc05f31370d8597CD54D680E416171342B6a302",
  "abi": [
    {
      "inputs": [],
      "name": "MINT_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_WITH_CHANNEL_ID_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PALLET_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEEM_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STABLE_POOL_SWAP_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWAP_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "token",
          "type": "bytes2"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "remark",
          "type": "string"
        }
      ],
      "name": "buildMintCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "token",
          "type": "bytes2"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "remark",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "channel_id",
          "type": "uint32"
        }
      ],
      "name": "buildMintWithChannelIdCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "vtoken",
          "type": "bytes2"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        }
      ],
      "name": "buildRedeemCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pool_id",
          "type": "uint32"
        },
        {
          "internalType": "bytes2",
          "name": "currency_in",
          "type": "bytes2"
        },
        {
          "internalType": "bytes2",
          "name": "currency_out",
          "type": "bytes2"
        },
        {
          "internalType": "uint128",
          "name": "min_dy",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        }
      ],
      "name": "buildStablePoolSwapCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "currency_in",
          "type": "bytes2"
        },
        {
          "internalType": "bytes2",
          "name": "currency_out",
          "type": "bytes2"
        },
        {
          "internalType": "uint128",
          "name": "currency_out_min",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        }
      ],
      "name": "buildSwapCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x170dddcf57df9d000f9d32969c147c9cd58d0a0df7cb5f99c67c857cddb9719c",
  "receipt": {
    "to": null,
    "from": "0x4597C97a43dFBb4a398E2b16AA9cE61f90d801DD",
    "contractAddress": "0xaDc05f31370d8597CD54D680E416171342B6a302",
    "transactionIndex": 2,
    "gasUsed": "1817190",
    "logsBloom": "0x
    "blockHash": "0xf17a08061ac5547cfe4acd3b669499dd1401c6b786bbd619224b53f5f4a81ee6",
    "transactionHash": "0x170dddcf57df9d000f9d32969c147c9cd58d0a0df7cb5f99c67c857cddb9719c",
    "logs": [],
    "blockNumber": 7456684,
    "cumulativeGasUsed": "1882226",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "5d0d41d00ebc4debd8b705b8263ef922",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MINT_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_WITH_CHANNEL_ID_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PALLET_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEEM_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLE_POOL_SWAP_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"token\",\"type\":\"bytes2\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"}],\"name\":\"buildMintCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"token\",\"type\":\"bytes2\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"channel_id\",\"type\":\"uint32\"}],\"name\":\"buildMintWithChannelIdCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"vtoken\",\"type\":\"bytes2\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"}],\"name\":\"buildRedeemCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pool_id\",\"type\":\"uint32\"},{\"internalType\":\"bytes2\",\"name\":\"currency_in\",\"type\":\"bytes2\"},{\"internalType\":\"bytes2\",\"name\":\"currency_out\",\"type\":\"bytes2\"},{\"internalType\":\"uint128\",\"name\":\"min_dy\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"}],\"name\":\"buildStablePoolSwapCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"currency_in\",\"type\":\"bytes2\"},{\"internalType\":\"bytes2\",\"name\":\"currency_out\",\"type\":\"bytes2\"},{\"internalType\":\"uint128\",\"name\":\"currency_out_min\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"}],\"name\":\"buildSwapCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/BuildCallData.sol\":\"BuildCallData\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/BuildCallData.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nlibrary BuildCallData {\\n    uint8 public constant PALLET_INDEX = 125;\\n    uint8 public constant MINT_CALL_INDEX = 0;\\n    uint8 public constant SWAP_CALL_INDEX = 1;\\n    uint8 public constant REDEEM_CALL_INDEX = 2;\\n    uint8 public constant STABLE_POOL_SWAP_CALL_INDEX = 3;\\n    uint8 public constant MINT_WITH_CHANNEL_ID_CALL_INDEX = 13;\\n\\n    function buildMintCallBytes(\\n        address caller,\\n        bytes2 token,\\n        bytes memory targetChain,\\n        string memory remark\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(MINT_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n                prefix,\\n                abi.encodePacked(caller),\\n                token,\\n                targetChain,\\n                toScaleString(remark)\\n            );\\n    }\\n\\n    function buildMintWithChannelIdCallBytes(\\n        address caller,\\n        bytes2 token,\\n        bytes memory targetChain,\\n        string memory remark,\\n        uint32 channel_id\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(MINT_WITH_CHANNEL_ID_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n            prefix,\\n            abi.encodePacked(caller),\\n            token,\\n            targetChain,\\n            toScaleString(remark),\\n            encode_uint32(channel_id)\\n        );\\n    }\\n\\n    function buildSwapCallBytes(\\n        address caller,\\n        bytes2 currency_in,\\n        bytes2 currency_out,\\n        uint128 currency_out_min,\\n        bytes memory targetChain\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(SWAP_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n                prefix,\\n                abi.encodePacked(caller),\\n                currency_in,\\n                currency_out,\\n                encode_uint128(currency_out_min),\\n                targetChain\\n            );\\n    }\\n\\n    function buildStablePoolSwapCallBytes(\\n        address caller,\\n        uint32 pool_id,\\n        bytes2 currency_in,\\n        bytes2 currency_out,\\n        uint128 min_dy,\\n        bytes memory targetChain\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(STABLE_POOL_SWAP_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n                prefix,\\n                abi.encodePacked(caller),\\n                encode_uint32(pool_id),\\n                currency_in,\\n                currency_out,\\n                encode_uint128(min_dy),\\n                targetChain\\n            );\\n    }\\n\\n    function buildRedeemCallBytes(\\n        address caller,\\n        bytes2 vtoken,\\n        bytes memory targetChain\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(REDEEM_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(prefix, abi.encodePacked(caller), vtoken, targetChain);\\n    }\\n\\n    //https://docs.substrate.io/reference/scale-codec/\\n    function encode_uint128(uint128 x) internal pure returns (bytes memory) {\\n        bytes memory b = new bytes(16);\\n        for (uint i = 0; i < 16; i++) {\\n            b[i] = bytes1(uint8(x / (2 ** (8 * i))));\\n        }\\n        return b;\\n    }\\n\\n    //https://docs.substrate.io/reference/scale-codec/\\n    function encode_uint32(uint32 x) internal pure returns (bytes memory) {\\n        bytes memory b = new bytes(4);\\n        for (uint i = 0; i < 4; i++) {\\n            b[i] = bytes1(uint8(x / (2 ** (8 * i))));\\n        }\\n        return b;\\n    }\\n\\n    //https://docs.substrate.io/reference/scale-codec/\\n    function toTruncBytes(uint64 x) internal pure returns (bytes memory) {\\n        bytes memory b = new bytes(8);\\n        uint len = 0;\\n        for (uint i = 0; i < 8; i++) {\\n            uint8 temp = uint8(x / (2 ** (8 * i)));\\n            if (temp != 0) {\\n                b[i] = bytes1(temp);\\n            } else {\\n                len = i;\\n                break;\\n            }\\n        }\\n        bytes memory rst = new bytes(len);\\n        for (uint i = 0; i < len; i++) {\\n            rst[i] = b[i];\\n        }\\n        return rst;\\n    }\\n\\n    // Convert an hexadecimal character to their value\\n    function fromScaleChar(uint8 c) internal pure returns (uint8) {\\n        if (bytes1(c) >= bytes1(\\\"0\\\") && bytes1(c) <= bytes1(\\\"9\\\")) {\\n            return 48 + c - uint8(bytes1(\\\"0\\\"));\\n        }\\n        if (bytes1(c) >= bytes1(\\\"a\\\") && bytes1(c) <= bytes1(\\\"z\\\")) {\\n            return 97 + c - uint8(bytes1(\\\"a\\\"));\\n        }\\n        if (bytes1(c) >= bytes1(\\\"A\\\") && bytes1(c) <= bytes1(\\\"Z\\\")) {\\n            return 65 + c - uint8(bytes1(\\\"A\\\"));\\n        }\\n        revert(\\\"fail\\\");\\n    }\\n\\n    // encode the string to bytes\\n    // following the scale format\\n    // format: len + content\\n    // a-z: 61->87\\n    // A-Z: 41->57\\n    // 0-9: 30->40\\n    function toScaleString(\\n        string memory s\\n    ) internal pure returns (bytes memory) {\\n        bytes memory ss = bytes(s);\\n        bytes memory len = toTruncBytes(uint64(ss.length * 4));\\n        bytes memory content = new bytes(ss.length);\\n        for (uint i = 0; i < ss.length; ++i) {\\n            content[i] = bytes1(fromScaleChar(uint8(ss[i])));\\n        }\\n        bytes memory rst = bytes.concat(len, content);\\n        return rst;\\n    }\\n}\\n\",\"keccak256\":\"0x0e992d48fd04e951fa4f8ec68b52a59137d7bc6f927472ab96c35f38a797e6a7\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x6112f561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c806370c8aa2d1161007b57806370c8aa2d1461010f5780639f00478314610122578063b921552714610135578063bae1fc5514610148578063cb070de514610150578063d53d7cad1461016357600080fd5b806314dadaaa146100b85780632b6a89ca146100d757806343fef1af146100df57806354ffa3e8146100e75780636bc6c67f146100ef575b600080fd5b6100c0600181565b60405160ff90911681526020015b60405180910390f35b6100c0600381565b6100c0607d81565b6100c0600281565b6101026100fd366004610b71565b61016b565b6040516100ce9190610c30565b61010261011d366004610c63565b610256565b610102610130366004610cf9565b61033e565b610102610143366004610d57565b61040e565b6100c0600d81565b61010261015e366004610ddc565b6104eb565b6100c0600081565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b816000815181106101a8576101a8610e5c565b60200101906001600160f81b031916908160001a905350600360f81b816001815181106101d7576101d7610e5c565b60200101906001600160f81b031916908160001a90535080886040516020016102009190610e72565b604051602081830303815290604052610218896105b0565b88886102238961064c565b8860405160200161023a9796959493929190610e8f565b6040516020818303038152906040529150509695505050505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061029357610293610e5c565b60200101906001600160f81b031916908160001a905350600d60f81b816001815181106102c2576102c2610e5c565b60200101906001600160f81b031916908160001a90535080876040516020016102eb9190610e72565b6040516020818303038152906040528787610305886106e4565b61030e886105b0565b60405160200161032396959493929190610f1c565b60405160208183030381529060405291505095945050505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061037b5761037b610e5c565b60200101906001600160f81b031916908160001a905350600260f81b816001815181106103aa576103aa610e5c565b60200101906001600160f81b031916908160001a90535080856040516020016103d39190610e72565b60408051601f19818403018152908290526103f5929187908790602001610fa1565b6040516020818303038152906040529150509392505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061044b5761044b610e5c565b60200101906001600160f81b031916908160001a905350600060f81b8160018151811061047a5761047a610e5c565b60200101906001600160f81b031916908160001a90535080866040516020016104a39190610e72565b60405160208183030381529060405286866104bd876106e4565b6040516020016104d1959493929190610ff8565b604051602081830303815290604052915050949350505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061052857610528610e5c565b60200101906001600160f81b031916908160001a905350600160f81b8160018151811061055757610557610e5c565b60200101906001600160f81b031916908160001a90535080876040516020016105809190610e72565b604051602081830303815290604052878761059a8861064c565b8760405160200161032396959493929190611066565b6040805160048082528183019092526060916000919060208201818036833701905050905060005b6004811015610645576105ec8160086110f5565b6105f79060026111f8565b6106079063ffffffff861661120b565b60f81b82828151811061061c5761061c610e5c565b60200101906001600160f81b031916908160001a9053508061063d8161122d565b9150506105d8565b5092915050565b6040805160108082528183019092526060916000919060208201818036833701905050905060005b6010811015610645576106888160086110f5565b6106939060026111f8565b6106a6906001600160801b03861661120b565b60f81b8282815181106106bb576106bb610e5c565b60200101906001600160f81b031916908160001a905350806106dc8161122d565b915050610674565b606060008290506000610703825160046106fe91906110f5565b6107e8565b90506000825167ffffffffffffffff81111561072157610721610ace565b6040519080825280601f01601f19166020018201604052801561074b576020820181803683370190505b50905060005b83518110156107b85761077c84828151811061076f5761076f610e5c565b016020015160f81c610954565b60f81b82828151811061079157610791610e5c565b60200101906001600160f81b031916908160001a9053506107b18161122d565b9050610751565b50600082826040516020016107ce929190611248565b60408051601f198184030181529190529695505050505050565b604080516008808252818301909252606091600091906020820181803683370190505090506000805b600881101561089f5760006108278260086110f5565b6108329060026111f8565b6108469067ffffffffffffffff881661120b565b905060ff811615610883578060f81b84838151811061086757610867610e5c565b60200101906001600160f81b031916908160001a90535061088c565b8192505061089f565b50806108978161122d565b915050610811565b5060008167ffffffffffffffff8111156108bb576108bb610ace565b6040519080825280601f01601f1916602001820160405280156108e5576020820181803683370190505b50905060005b8281101561094b5783818151811061090557610905610e5c565b602001015160f81c60f81b82828151811061092257610922610e5c565b60200101906001600160f81b031916908160001a905350806109438161122d565b9150506108eb565b50949350505050565b6000600360fc1b60f883901b6001600160f81b0319161080159061098a5750603960f81b60f883901b6001600160f81b03191611155b156109ab57603061099b8382611277565b6109a5919061129c565b92915050565b606160f81b60f883901b6001600160f81b031916108015906109df5750603d60f91b60f883901b6001600160f81b03191611155b156109f057606161099b8382611277565b604160f81b60f883901b6001600160f81b03191610801590610a245750602d60f91b60f883901b6001600160f81b03191611155b15610a3557604161099b8382611277565b60405162461bcd60e51b8152600401610a669060208082526004908201526319985a5b60e21b604082015260600190565b60405180910390fd5b80356001600160a01b0381168114610a8657600080fd5b919050565b803563ffffffff81168114610a8657600080fd5b80356001600160f01b031981168114610a8657600080fd5b80356001600160801b0381168114610a8657600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610af557600080fd5b813567ffffffffffffffff80821115610b1057610b10610ace565b604051601f8301601f19908116603f01168101908282118183101715610b3857610b38610ace565b81604052838152866020858801011115610b5157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215610b8a57600080fd5b610b9387610a6f565b9550610ba160208801610a8b565b9450610baf60408801610a9f565b9350610bbd60608801610a9f565b9250610bcb60808801610ab7565b915060a087013567ffffffffffffffff811115610be757600080fd5b610bf389828a01610ae4565b9150509295509295509295565b60005b83811015610c1b578181015183820152602001610c03565b83811115610c2a576000848401525b50505050565b6020815260008251806020840152610c4f816040850160208701610c00565b601f01601f19169190910160400192915050565b600080600080600060a08688031215610c7b57600080fd5b610c8486610a6f565b9450610c9260208701610a9f565b9350604086013567ffffffffffffffff80821115610caf57600080fd5b610cbb89838a01610ae4565b94506060880135915080821115610cd157600080fd5b50610cde88828901610ae4565b925050610ced60808701610a8b565b90509295509295909350565b600080600060608486031215610d0e57600080fd5b610d1784610a6f565b9250610d2560208501610a9f565b9150604084013567ffffffffffffffff811115610d4157600080fd5b610d4d86828701610ae4565b9150509250925092565b60008060008060808587031215610d6d57600080fd5b610d7685610a6f565b9350610d8460208601610a9f565b9250604085013567ffffffffffffffff80821115610da157600080fd5b610dad88838901610ae4565b93506060870135915080821115610dc357600080fd5b50610dd087828801610ae4565b91505092959194509250565b600080600080600060a08688031215610df457600080fd5b610dfd86610a6f565b9450610e0b60208701610a9f565b9350610e1960408701610a9f565b9250610e2760608701610ab7565b9150608086013567ffffffffffffffff811115610e4357600080fd5b610e4f88828901610ae4565b9150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60609190911b6bffffffffffffffffffffffff1916815260140190565b60008851610ea1818460208d01610c00565b885190830190610eb5818360208d01610c00565b8851910190610ec8818360208c01610c00565b6001600160f01b031988811692909101918252861660028201528451610ef5816004840160208901610c00565b8451910190610f0b816004840160208801610c00565b016004019998505050505050505050565b60008751610f2e818460208c01610c00565b875190830190610f42818360208c01610c00565b6001600160f01b0319881691019081528551610f65816002840160208a01610c00565b8551910190610f7b816002840160208901610c00565b8451910190610f91816002840160208801610c00565b0160020198975050505050505050565b60008551610fb3818460208a01610c00565b855190830190610fc7818360208a01610c00565b6001600160f01b0319861691019081528351610fea816002840160208801610c00565b016002019695505050505050565b6000865161100a818460208b01610c00565b86519083019061101e818360208b01610c00565b6001600160f01b0319871691019081528451611041816002840160208901610c00565b8451910190611057816002840160208801610c00565b01600201979650505050505050565b60008751611078818460208c01610c00565b87519083019061108c818360208c01610c00565b6001600160f01b0319888116929091019182528616600282015284516110b9816004840160208901610c00565b84519101906110cf816004840160208801610c00565b0160040198975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561110f5761110f6110df565b500290565b600181815b8085111561114f578160001904821115611135576111356110df565b8085161561114257918102915b93841c9390800290611119565b509250929050565b600082611166575060016109a5565b81611173575060006109a5565b81600181146111895760028114611193576111af565b60019150506109a5565b60ff8411156111a4576111a46110df565b50506001821b6109a5565b5060208310610133831016604e8410600b84101617156111d2575081810a6109a5565b6111dc8383611114565b80600019048211156111f0576111f06110df565b029392505050565b60006112048383611157565b9392505050565b60008261122857634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415611241576112416110df565b5060010190565b6000835161125a818460208801610c00565b83519083019061126e818360208801610c00565b01949350505050565b600060ff821660ff84168060ff03821115611294576112946110df565b019392505050565b600060ff821660ff8416808210156112b6576112b66110df565b9003939250505056fea2646970667358221220a6127db67f0f5028bd1778f14fd6fc7b7dbcd30e1903cf44ae21d6cae2dc86b864736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c806370c8aa2d1161007b57806370c8aa2d1461010f5780639f00478314610122578063b921552714610135578063bae1fc5514610148578063cb070de514610150578063d53d7cad1461016357600080fd5b806314dadaaa146100b85780632b6a89ca146100d757806343fef1af146100df57806354ffa3e8146100e75780636bc6c67f146100ef575b600080fd5b6100c0600181565b60405160ff90911681526020015b60405180910390f35b6100c0600381565b6100c0607d81565b6100c0600281565b6101026100fd366004610b71565b61016b565b6040516100ce9190610c30565b61010261011d366004610c63565b610256565b610102610130366004610cf9565b61033e565b610102610143366004610d57565b61040e565b6100c0600d81565b61010261015e366004610ddc565b6104eb565b6100c0600081565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b816000815181106101a8576101a8610e5c565b60200101906001600160f81b031916908160001a905350600360f81b816001815181106101d7576101d7610e5c565b60200101906001600160f81b031916908160001a90535080886040516020016102009190610e72565b604051602081830303815290604052610218896105b0565b88886102238961064c565b8860405160200161023a9796959493929190610e8f565b6040516020818303038152906040529150509695505050505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061029357610293610e5c565b60200101906001600160f81b031916908160001a905350600d60f81b816001815181106102c2576102c2610e5c565b60200101906001600160f81b031916908160001a90535080876040516020016102eb9190610e72565b6040516020818303038152906040528787610305886106e4565b61030e886105b0565b60405160200161032396959493929190610f1c565b60405160208183030381529060405291505095945050505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061037b5761037b610e5c565b60200101906001600160f81b031916908160001a905350600260f81b816001815181106103aa576103aa610e5c565b60200101906001600160f81b031916908160001a90535080856040516020016103d39190610e72565b60408051601f19818403018152908290526103f5929187908790602001610fa1565b6040516020818303038152906040529150509392505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061044b5761044b610e5c565b60200101906001600160f81b031916908160001a905350600060f81b8160018151811061047a5761047a610e5c565b60200101906001600160f81b031916908160001a90535080866040516020016104a39190610e72565b60405160208183030381529060405286866104bd876106e4565b6040516020016104d1959493929190610ff8565b604051602081830303815290604052915050949350505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061052857610528610e5c565b60200101906001600160f81b031916908160001a905350600160f81b8160018151811061055757610557610e5c565b60200101906001600160f81b031916908160001a90535080876040516020016105809190610e72565b604051602081830303815290604052878761059a8861064c565b8760405160200161032396959493929190611066565b6040805160048082528183019092526060916000919060208201818036833701905050905060005b6004811015610645576105ec8160086110f5565b6105f79060026111f8565b6106079063ffffffff861661120b565b60f81b82828151811061061c5761061c610e5c565b60200101906001600160f81b031916908160001a9053508061063d8161122d565b9150506105d8565b5092915050565b6040805160108082528183019092526060916000919060208201818036833701905050905060005b6010811015610645576106888160086110f5565b6106939060026111f8565b6106a6906001600160801b03861661120b565b60f81b8282815181106106bb576106bb610e5c565b60200101906001600160f81b031916908160001a905350806106dc8161122d565b915050610674565b606060008290506000610703825160046106fe91906110f5565b6107e8565b90506000825167ffffffffffffffff81111561072157610721610ace565b6040519080825280601f01601f19166020018201604052801561074b576020820181803683370190505b50905060005b83518110156107b85761077c84828151811061076f5761076f610e5c565b016020015160f81c610954565b60f81b82828151811061079157610791610e5c565b60200101906001600160f81b031916908160001a9053506107b18161122d565b9050610751565b50600082826040516020016107ce929190611248565b60408051601f198184030181529190529695505050505050565b604080516008808252818301909252606091600091906020820181803683370190505090506000805b600881101561089f5760006108278260086110f5565b6108329060026111f8565b6108469067ffffffffffffffff881661120b565b905060ff811615610883578060f81b84838151811061086757610867610e5c565b60200101906001600160f81b031916908160001a90535061088c565b8192505061089f565b50806108978161122d565b915050610811565b5060008167ffffffffffffffff8111156108bb576108bb610ace565b6040519080825280601f01601f1916602001820160405280156108e5576020820181803683370190505b50905060005b8281101561094b5783818151811061090557610905610e5c565b602001015160f81c60f81b82828151811061092257610922610e5c565b60200101906001600160f81b031916908160001a905350806109438161122d565b9150506108eb565b50949350505050565b6000600360fc1b60f883901b6001600160f81b0319161080159061098a5750603960f81b60f883901b6001600160f81b03191611155b156109ab57603061099b8382611277565b6109a5919061129c565b92915050565b606160f81b60f883901b6001600160f81b031916108015906109df5750603d60f91b60f883901b6001600160f81b03191611155b156109f057606161099b8382611277565b604160f81b60f883901b6001600160f81b03191610801590610a245750602d60f91b60f883901b6001600160f81b03191611155b15610a3557604161099b8382611277565b60405162461bcd60e51b8152600401610a669060208082526004908201526319985a5b60e21b604082015260600190565b60405180910390fd5b80356001600160a01b0381168114610a8657600080fd5b919050565b803563ffffffff81168114610a8657600080fd5b80356001600160f01b031981168114610a8657600080fd5b80356001600160801b0381168114610a8657600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610af557600080fd5b813567ffffffffffffffff80821115610b1057610b10610ace565b604051601f8301601f19908116603f01168101908282118183101715610b3857610b38610ace565b81604052838152866020858801011115610b5157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215610b8a57600080fd5b610b9387610a6f565b9550610ba160208801610a8b565b9450610baf60408801610a9f565b9350610bbd60608801610a9f565b9250610bcb60808801610ab7565b915060a087013567ffffffffffffffff811115610be757600080fd5b610bf389828a01610ae4565b9150509295509295509295565b60005b83811015610c1b578181015183820152602001610c03565b83811115610c2a576000848401525b50505050565b6020815260008251806020840152610c4f816040850160208701610c00565b601f01601f19169190910160400192915050565b600080600080600060a08688031215610c7b57600080fd5b610c8486610a6f565b9450610c9260208701610a9f565b9350604086013567ffffffffffffffff80821115610caf57600080fd5b610cbb89838a01610ae4565b94506060880135915080821115610cd157600080fd5b50610cde88828901610ae4565b925050610ced60808701610a8b565b90509295509295909350565b600080600060608486031215610d0e57600080fd5b610d1784610a6f565b9250610d2560208501610a9f565b9150604084013567ffffffffffffffff811115610d4157600080fd5b610d4d86828701610ae4565b9150509250925092565b60008060008060808587031215610d6d57600080fd5b610d7685610a6f565b9350610d8460208601610a9f565b9250604085013567ffffffffffffffff80821115610da157600080fd5b610dad88838901610ae4565b93506060870135915080821115610dc357600080fd5b50610dd087828801610ae4565b91505092959194509250565b600080600080600060a08688031215610df457600080fd5b610dfd86610a6f565b9450610e0b60208701610a9f565b9350610e1960408701610a9f565b9250610e2760608701610ab7565b9150608086013567ffffffffffffffff811115610e4357600080fd5b610e4f88828901610ae4565b9150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60609190911b6bffffffffffffffffffffffff1916815260140190565b60008851610ea1818460208d01610c00565b885190830190610eb5818360208d01610c00565b8851910190610ec8818360208c01610c00565b6001600160f01b031988811692909101918252861660028201528451610ef5816004840160208901610c00565b8451910190610f0b816004840160208801610c00565b016004019998505050505050505050565b60008751610f2e818460208c01610c00565b875190830190610f42818360208c01610c00565b6001600160f01b0319881691019081528551610f65816002840160208a01610c00565b8551910190610f7b816002840160208901610c00565b8451910190610f91816002840160208801610c00565b0160020198975050505050505050565b60008551610fb3818460208a01610c00565b855190830190610fc7818360208a01610c00565b6001600160f01b0319861691019081528351610fea816002840160208801610c00565b016002019695505050505050565b6000865161100a818460208b01610c00565b86519083019061101e818360208b01610c00565b6001600160f01b0319871691019081528451611041816002840160208901610c00565b8451910190611057816002840160208801610c00565b01600201979650505050505050565b60008751611078818460208c01610c00565b87519083019061108c818360208c01610c00565b6001600160f01b0319888116929091019182528616600282015284516110b9816004840160208901610c00565b84519101906110cf816004840160208801610c00565b0160040198975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561110f5761110f6110df565b500290565b600181815b8085111561114f578160001904821115611135576111356110df565b8085161561114257918102915b93841c9390800290611119565b509250929050565b600082611166575060016109a5565b81611173575060006109a5565b81600181146111895760028114611193576111af565b60019150506109a5565b60ff8411156111a4576111a46110df565b50506001821b6109a5565b5060208310610133831016604e8410600b84101617156111d2575081810a6109a5565b6111dc8383611114565b80600019048211156111f0576111f06110df565b029392505050565b60006112048383611157565b9392505050565b60008261122857634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415611241576112416110df565b5060010190565b6000835161125a818460208801610c00565b83519083019061126e818360208801610c00565b01949350505050565b600060ff821660ff84168060ff03821115611294576112946110df565b019392505050565b600060ff821660ff8416808210156112b6576112b66110df565b9003939250505056fea2646970667358221220a6127db67f0f5028bd1778f14fd6fc7b7dbcd30e1903cf44ae21d6cae2dc86b864736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}